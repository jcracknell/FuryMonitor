0.2.3 -
Fixed a bug where FuryMonitor would spew errors if there were no abilities available (ie. new Warrior character)
FuryMonitor now only loads if the player's character is a Warrior.
	
Added talent support such that ability damage reflects player talents (Unending Fury, Improved Whirlwind)
Added Bloodsurge (instant Slam) to the rotation
Changed Bloodthirst to reflect changes in 3.0.3 (increased damage)
Added GetMainHandNormalizedSpeed() and GetOffHandNormalizedSpeed() methods to character abstraction (to support Mortal Strike, Devastate, etc)
Added support for overriding the behavior of Ability:IsAvailable() on a per-instance basis. This lets you control an ability's "availability" based on character buffs, etc (i.e. Bloodsurge).
Changing stances now correctly updates the rotation/ability damage immediately
Fixed a bug in Ability:GetCooldownDuration() that caused all abilities to take on the cooldown of any ability with a cooldown under the GCD (due to haste)
Removed rage dump frame entirely (heroic strike), as it was mostly useless and didn't work well anyways.
Converted most internal events to use the Observer pattern, removed all use of string keys
Fixed a bug that would cause errors when aquiring new abilities via talent changes

0.2.1 - 2008-09-14
Complete re-design and re-implementation of the rotation building engine. The changes should improve performance, and I believe the results are actually correct now. As a result the mod should now support devastate spam builds (and actually recommend something other than devastate once in a while).
Fixed a bug where FuryMonitor.Character would report higher weapon damage if Flurry was active
Fixed typo causing lua errors in "debug permutationcache" command.
Fixed "set option enabled" command so that arguments "0" and "false" will correctly disable the mod.
Added optional "destination" parameter to FuryMonitor.Util.copy_table that does not cause table creation
Did some preliminary work for the integration of Slam/Weapon Throw: Added FuryMonitor.Ability:GetCastTime() Added FuryMonitor.Character:GetHitChance()
Added a "rage indicator" to AbilityFrames that lights up if the character has sufficient rage to use the ability at this point in the rotation
Added a rage dump indicator that lights up in the event that the player has rage past a user-configurable point in the proposed rotation.
Changed the frame strata used by AbilityFrames to improve control over alpha transparency
Added "set display alpha" option to allow users to control the overall transparency of the mod.
Changed configuration defaults to have smaller AbilityFrames and less padding by default

0.1.4 - 2008-09-13
Bugfix for lua errors when no offhand weapon equipped
FuryMonitor.Character:GetOffHandWeaponDamage() no longer returns negative values when no offhand weapon is equipped

0.1.3 - 2008-09-13
Fixed OnConfigurationChange un-subscription process for AbilityFrames
Stopped thrashing the shit out of the heap by changing all instances of table.foreach to use the for k,v in pairs(tbl) construction as per: http://lua-users.org/wiki/OptimisingGarbageCollection
Fixed "jumpy" animation by removing rounding from positioning of AbilityFrames
Added more debugging commands: 
	debug permutationcache 
	debug configurationsubscribers 
	debug character weapondamage 
	debug character weaponspeed
Added SavedVariable support
Fixed startup process so that FuryMonitor.Main:OnLoad() is not triggered until after variables have loaded
Fixed FuryMonitor.Character:GetMainHandWeaponSpeed() and FuryMonitor.Character:GetOffHandWeaponSpeed() so that the returned values are no longer affected by haste
As a result of the above, FuryMonitor.Character:GetMainHandWeaponDamage() and FuryMonitor.Character:GetOffHandWeaponDamage() now work properly.
Added proper rounding support to FuryMonitor.Util.round
